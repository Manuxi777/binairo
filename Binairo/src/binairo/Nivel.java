/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package binairo;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.awt.geom.Line2D;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;

/**
 *
 * @author manuc
 */
public class Nivel extends javax.swing.JDialog {

    private final int CELDA_SIZE = 48;
    private final int N;
    private final int M;
    private final int CI;
    private LinkedList<Celda> celdasPorVer;
    private LinkedList<Celda> celdasVistas;
    private final ScheduledExecutorService executorService = Executors.newSingleThreadScheduledExecutor();

    public Nivel(java.awt.Frame parent, boolean modal, int N, int M, int CI, LinkedList<Celda> celdas) {
        super(parent, modal);
        this.setResizable(false);
        this.N = N + 1;
        this.M = M + 1;
        this.CI = CI;
        this.setTitle("Binairo: " + this.N + "x" + this.M + " Hard");
        initComponents();
        initComponents2();
        this.celdasPorVer = celdas;
        this.celdasVistas = new LinkedList<Celda>();

        // this.setMinimumSize(new Dimension(50, 50));
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        setVisible(true);
    }

    public void paint(Graphics g) {
        super.paint(g);
        // this.jPanelBoard.setBackground(Color.WHITE);
        int positionY = CELDA_SIZE;
        int positionX = CELDA_SIZE;
        int i;
        for (i = 1; i < this.N; i++) {
            g.drawLine(0, positionY, this.jPanelBoard.getWidth(), positionY);
            positionY += CELDA_SIZE;
        }
        for (i = 1; i < this.M; i++) {
            g.drawLine(positionX, 0, positionX, CELDA_SIZE * N);
            positionX += CELDA_SIZE;
        }
    }

    private void avanzar() {
        // Quitamos la Celda de la cabeza de la lista de una y la ponemos en la cola de la otra
        this.celdasVistas.addLast(this.celdasPorVer.removeFirst());
        Iterator it = this.celdasVistas.iterator();
        while (it.hasNext()) {
            System.out.println(it.next().toString());
        }
        System.out.println();
        this.repaint();
    }

    private void retroceder() {
        // Quitamos el Ãºltimo elemento de la lista de celdas vistas y lo agregamos en la cabeza de la otra
        this.celdasPorVer.addFirst(this.celdasVistas.removeLast());
        this.repaint();
    }

    private void initComponents2() {
        inicializarBoton(this.jButtonAvanzar, "src\\binairo\\images\\next.png", 25);
        inicializarBoton(this.jButtonMenuPrincipal, "src\\binairo\\images\\menu.png", 25);
        inicializarBoton(this.jButtonPlay, "src\\binairo\\images\\play.png", 25);
        inicializarBoton(this.jButtonRetroceder, "src\\binairo\\images\\previous.png", 25);
        inicializarBoton(this.jButtonStop, "src\\binairo\\images\\stop.png", 25);
        this.jPanelBoard.setSize(CELDA_SIZE * this.M, CELDA_SIZE * this.N);
        this.pack();
        repaint();
    }

    private void inicializarBoton(JButton button, String path, int dimension) {
        button.setIcon(new ImageIcon(((new ImageIcon(path).getImage().getScaledInstance(25, 25, java.awt.Image.SCALE_SMOOTH)))));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelBoard = new javax.swing.JPanel();
        jPanelControl = new javax.swing.JPanel();
        jButtonRetroceder = new javax.swing.JButton();
        jButtonAvanzar = new javax.swing.JButton();
        jButtonPlay = new javax.swing.JButton();
        jButtonStop = new javax.swing.JButton();
        jButtonMenuPrincipal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout jPanelBoardLayout = new javax.swing.GroupLayout(jPanelBoard);
        jPanelBoard.setLayout(jPanelBoardLayout);
        jPanelBoardLayout.setHorizontalGroup(
            jPanelBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelBoardLayout.setVerticalGroup(
            jPanelBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 309, Short.MAX_VALUE)
        );

        jPanelControl.setLayout(new java.awt.GridBagLayout());

        jButtonRetroceder.setFocusable(false);
        jButtonRetroceder.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonRetroceder.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonRetroceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRetrocederActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 0);
        jPanelControl.add(jButtonRetroceder, gridBagConstraints);

        jButtonAvanzar.setFocusable(false);
        jButtonAvanzar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAvanzar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonAvanzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAvanzarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 0);
        jPanelControl.add(jButtonAvanzar, gridBagConstraints);

        jButtonPlay.setFocusable(false);
        jButtonPlay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonPlay.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlayActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 0);
        jPanelControl.add(jButtonPlay, gridBagConstraints);

        jButtonStop.setFocusable(false);
        jButtonStop.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonStop.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStopActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 0);
        jPanelControl.add(jButtonStop, gridBagConstraints);

        jButtonMenuPrincipal.setFocusable(false);
        jButtonMenuPrincipal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonMenuPrincipal.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonMenuPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenuPrincipalActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 93);
        jPanelControl.add(jButtonMenuPrincipal, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelBoard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRetrocederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRetrocederActionPerformed
        this.retroceder();
    }//GEN-LAST:event_jButtonRetrocederActionPerformed

    private void jButtonAvanzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAvanzarActionPerformed
        this.avanzar();
    }//GEN-LAST:event_jButtonAvanzarActionPerformed

    private void jButtonMenuPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenuPrincipalActionPerformed
        try {
            this.executorService.awaitTermination(2, TimeUnit.SECONDS);
        } catch (InterruptedException ex) {
            Logger.getLogger(Nivel.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_jButtonMenuPrincipalActionPerformed

    private void jButtonPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlayActionPerformed
        this.jButtonAvanzar.setEnabled(false);
        this.jButtonRetroceder.setEnabled(false);
        this.executorService.scheduleAtFixedRate(new Runnable() {
            @Override
            public void run() {
                avanzar();
            }
        }, 0, 2, TimeUnit.SECONDS);
    }//GEN-LAST:event_jButtonPlayActionPerformed

    private void jButtonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStopActionPerformed
        try {
            this.executorService.awaitTermination(2, TimeUnit.SECONDS);
        } catch (InterruptedException ex) {
            Logger.getLogger(Nivel.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.jButtonAvanzar.setEnabled(true);
        this.jButtonRetroceder.setEnabled(true);
    }//GEN-LAST:event_jButtonStopActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAvanzar;
    private javax.swing.JButton jButtonMenuPrincipal;
    private javax.swing.JButton jButtonPlay;
    private javax.swing.JButton jButtonRetroceder;
    private javax.swing.JButton jButtonStop;
    private javax.swing.JPanel jPanelBoard;
    private javax.swing.JPanel jPanelControl;
    // End of variables declaration//GEN-END:variables
}
